/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  HelloWorld,
  HelloWorldInterface,
} from "../../../__tests__/contracts/HelloWorld";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_gateway",
        type: "address",
      },
      {
        internalType: "address",
        name: "_gasReceiver",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NotApprovedByGateway",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Executed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "executeWithToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gateway",
    outputs: [
      {
        internalType: "contract IAxelarGateway",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "destinationChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "destinationAddress",
        type: "string",
      },
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "setRemoteValue",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "sourceAddress",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sourceChain",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "value",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610da0380380610da083398101604081905261002f9161009f565b816001600160a01b0381166100575760405163e6c4247b60e01b815260040160405180910390fd5b6001600160a01b03908116608052600380546001600160a01b03191692909116919091179055506100d2565b80516001600160a01b038116811461009a57600080fd5b919050565b600080604083850312156100b257600080fd5b6100bb83610083565b91506100c960208401610083565b90509250929050565b608051610c9f610101600039600081816087015281816101b10152818161035701526105000152610c9f6000f3fe6080604052600436106100705760003560e01c80633fa4f2451161004e5780633fa4f2451461010a578063491606581461011f57806380d326971461013f578063b0fa84441461015257600080fd5b8063116191b6146100755780631a98b2e0146100c65780631c6ffa46146100e8575b600080fd5b34801561008157600080fd5b506100a97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100d257600080fd5b506100e66100e1366004610741565b610167565b005b3480156100f457600080fd5b506100fd610272565b6040516100bd9190610868565b34801561011657600080fd5b506100fd610300565b34801561012b57600080fd5b506100e661013a366004610882565b61030d565b6100e661014d3660046109c9565b61041d565b34801561015e57600080fd5b506100fd610572565b60008585604051610179929190610a54565b6040519081900381207f1876eed900000000000000000000000000000000000000000000000000000000825291506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631876eed9906101f6908e908e908e908e908e9089908d908d908d90600401610a8d565b602060405180830381600087803b15801561021057600080fd5b505af1158015610224573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102489190610aec565b61026557604051631403112d60e21b815260040160405180910390fd5b5050505050505050505050565b6001805461027f90610b0e565b80601f01602080910402602001604051908101604052809291908181526020018280546102ab90610b0e565b80156102f85780601f106102cd576101008083540402835291602001916102f8565b820191906000526020600020905b8154815290600101906020018083116102db57829003601f168201915b505050505081565b6000805461027f90610b0e565b6000828260405161031f929190610a54565b6040519081900381207f5f6970c300000000000000000000000000000000000000000000000000000000825291506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635f6970c390610396908b908b908b908b908b908990600401610b49565b602060405180830381600087803b1580156103b057600080fd5b505af11580156103c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e89190610aec565b61040557604051631403112d60e21b815260040160405180910390fd5b61041387878787878761057f565b5050505050505050565b60008282604051602001610432929190610a54565b60408051601f19818403018152919052905034156104d0576003546040517f0c93e3bb0000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690630c93e3bb90349061049d9030908a908a9088903390600401610b8a565b6000604051808303818588803b1580156104b657600080fd5b505af11580156104ca573d6000803e3d6000fd5b50505050505b6040517f1c92115f0000000000000000000000000000000000000000000000000000000081526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631c92115f9061053990889088908690600401610be9565b600060405180830381600087803b15801561055357600080fd5b505af1158015610567573d6000803e3d6000fd5b505050505050505050565b6002805461027f90610b0e565b61058b81830183610c2c565b805161059f916000916020909101906105eb565b506105ac6001878761066f565b506105b96002858561066f565b506040517f68f46c45a243a0e9065a97649faf9a5afe1692f2679e650c2f853b9cd734cc0e90600090a1505050505050565b8280546105f790610b0e565b90600052602060002090601f016020900481019282610619576000855561065f565b82601f1061063257805160ff191683800117855561065f565b8280016001018555821561065f579182015b8281111561065f578251825591602001919060010190610644565b5061066b9291506106e3565b5090565b82805461067b90610b0e565b90600052602060002090601f01602090048101928261069d576000855561065f565b82601f106106b65782800160ff1982351617855561065f565b8280016001018555821561065f579182015b8281111561065f5782358255916020019190600101906106c8565b5b8082111561066b57600081556001016106e4565b60008083601f84011261070a57600080fd5b50813567ffffffffffffffff81111561072257600080fd5b60208301915083602082850101111561073a57600080fd5b9250929050565b60008060008060008060008060008060c08b8d03121561076057600080fd5b8a35995060208b013567ffffffffffffffff8082111561077f57600080fd5b61078b8e838f016106f8565b909b50995060408d01359150808211156107a457600080fd5b6107b08e838f016106f8565b909950975060608d01359150808211156107c957600080fd5b6107d58e838f016106f8565b909750955060808d01359150808211156107ee57600080fd5b506107fb8d828e016106f8565b9150809450508092505060a08b013590509295989b9194979a5092959850565b6000815180845260005b8181101561084157602081850181015186830182015201610825565b81811115610853576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061087b602083018461081b565b9392505050565b60008060008060008060006080888a03121561089d57600080fd5b87359650602088013567ffffffffffffffff808211156108bc57600080fd5b6108c88b838c016106f8565b909850965060408a01359150808211156108e157600080fd5b6108ed8b838c016106f8565b909650945060608a013591508082111561090657600080fd5b506109138a828b016106f8565b989b979a50959850939692959293505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261094d57600080fd5b813567ffffffffffffffff8082111561096857610968610926565b604051601f8301601f19908116603f0116810190828211818310171561099057610990610926565b816040528381528660208588010111156109a957600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080606085870312156109df57600080fd5b843567ffffffffffffffff808211156109f757600080fd5b610a038883890161093c565b95506020870135915080821115610a1957600080fd5b610a258883890161093c565b94506040870135915080821115610a3b57600080fd5b50610a48878288016106f8565b95989497509550505050565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b89815260c060208201526000610aa760c083018a8c610a64565b8281036040840152610aba81898b610a64565b90508660608401528281036080840152610ad5818688610a64565b9150508260a08301529a9950505050505050505050565b600060208284031215610afe57600080fd5b8151801515811461087b57600080fd5b600181811c90821680610b2257607f821691505b60208210811415610b4357634e487b7160e01b600052602260045260246000fd5b50919050565b868152608060208201526000610b63608083018789610a64565b8281036040840152610b76818688610a64565b915050826060830152979650505050505050565b60006001600160a01b03808816835260a06020840152610bad60a084018861081b565b8381036040850152610bbf818861081b565b90508381036060850152610bd3818761081b565b9250508084166080840152509695505050505050565b606081526000610bfc606083018661081b565b8281036020840152610c0e818661081b565b90508281036040840152610c22818561081b565b9695505050505050565b600060208284031215610c3e57600080fd5b813567ffffffffffffffff811115610c5557600080fd5b610c618482850161093c565b94935050505056fea2646970667358221220b91ae2ce6d2f2ea66054fa9e0dda18f48e9d5b015411a1569c2308a4e8a7a88164736f6c63430008090033";

type HelloWorldConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HelloWorldConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HelloWorld__factory extends ContractFactory {
  constructor(...args: HelloWorldConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _gateway: PromiseOrValue<string>,
    _gasReceiver: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HelloWorld> {
    return super.deploy(
      _gateway,
      _gasReceiver,
      overrides || {}
    ) as Promise<HelloWorld>;
  }
  override getDeployTransaction(
    _gateway: PromiseOrValue<string>,
    _gasReceiver: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_gateway, _gasReceiver, overrides || {});
  }
  override attach(address: string): HelloWorld {
    return super.attach(address) as HelloWorld;
  }
  override connect(signer: Signer): HelloWorld__factory {
    return super.connect(signer) as HelloWorld__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HelloWorldInterface {
    return new utils.Interface(_abi) as HelloWorldInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HelloWorld {
    return new Contract(address, _abi, signerOrProvider) as HelloWorld;
  }
}
