import { ethers } from "ethers";
describe("decode", () => {
  function decodePayload(payload: string) {
    // Define the structure of the encoded data based on how it was encoded in Solidity
    const types = [
      "string", // Method name
      "string[]", // Argument name array
      "string[]", // ABI type array
      "tuple(string,string,bytes)", // Argument values as a tuple
    ];
    // Decode the payload
    const decoded = ethers.utils.defaultAbiCoder.decode(types, payload);
    console.log(decoded)

    // Extract the method name and argument values
    const methodName = decoded[0];
    const argValues = decoded[3];

    // Decode the executeMsgPayload from the tuple
    const executeMsgPayload = argValues[2]; // This is the third item in the tuple

    // Decode the sender and message from the executeMsgPayload
    const [sender, message] = ethers.utils.defaultAbiCoder.decode(
      ["string", "string"],
      executeMsgPayload
    );

    return { sender, message };
  }

  it("decode bytes string", () => {
    // const value = ethers.utils.toUtf8Bytes("Hello World");
    const value =
      "0x000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003400000000000000000000000000000000000000000000000000000000000000013726563656976655f6d6573736167655f65766d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000000c736f757263655f636861696e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e736f757263655f6164647265737300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000077061796c6f6164000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000006737472696e6700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006737472696e670000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000562797465730000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002a3078356233343837366666623136353637313066623936336563643139396336663137336332393236370000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000002a30786531373063373031643832613735346261316537623534616237353664386330326637623235386500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001368656c6c6f2066726f6d20657468657265756d00000000000000000000000000";
    // const hex = ethers.utils.hexlify(value);
    // console.log(hex);

    const result = decodePayload(value);
    console.log(result);
  });
});
